// Code generated from JsonQuery.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type JsonQueryLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var JsonQueryLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func jsonquerylexerLexerInit() {
	staticData := &JsonQueryLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'('", "')'", "'pr'", "'.'", "'-'", "'['", "']'", "", "", "", "'null'",
		"", "", "", "", "", "", "", "", "", "", "'MLP'", "'SUM'", "'SUBTRACT'",
		"'DIV'", "", "", "", "", "", "", "", "'\\n'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "NOT", "LOGICAL_OPERATOR", "BOOLEAN",
		"NULL", "IN", "EQ", "NE", "GT", "LT", "GE", "LE", "CO", "SW", "EW",
		"ASTERISK", "PLUS", "MINUS", "DIVISON", "ATTRNAME", "DATETIME", "VERSION",
		"STRING", "DOUBLE", "INT", "EXP", "NEWLINE", "COMMA", "SP",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "NOT", "LOGICAL_OPERATOR",
		"BOOLEAN", "NULL", "IN", "EQ", "NE", "GT", "LT", "GE", "LE", "CO", "SW",
		"EW", "ASTERISK", "PLUS", "MINUS", "DIVISON", "ATTRNAME", "ATTR_NAME_CHAR",
		"DIGIT", "ALPHA", "DATETIME", "VERSION", "STRING", "ESC", "UNICODE",
		"HEX", "DOUBLE", "INT", "EXP", "NEWLINE", "COMMA", "SP",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 35, 328, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 1, 0, 1,
		0, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1,
		6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 3, 7, 105, 8, 7, 1, 8, 1,
		8, 1, 8, 1, 8, 1, 8, 3, 8, 112, 8, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 9, 1, 9, 3, 9, 123, 8, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 11, 1, 11, 1, 11, 1, 11, 3, 11, 134, 8, 11, 1, 12, 1, 12, 1, 12, 1,
		12, 1, 12, 1, 12, 3, 12, 142, 8, 12, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13,
		1, 13, 3, 13, 150, 8, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 3, 14, 157,
		8, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 3, 15, 164, 8, 15, 1, 16, 1,
		16, 1, 16, 1, 16, 1, 16, 1, 16, 3, 16, 172, 8, 16, 1, 17, 1, 17, 1, 17,
		1, 17, 1, 17, 1, 17, 3, 17, 180, 8, 17, 1, 18, 1, 18, 1, 18, 1, 18, 3,
		18, 186, 8, 18, 1, 19, 1, 19, 1, 19, 1, 19, 3, 19, 192, 8, 19, 1, 20, 1,
		20, 1, 20, 1, 20, 3, 20, 198, 8, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1, 22,
		1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1, 23, 1,
		23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 5, 25, 223, 8, 25,
		10, 25, 12, 25, 226, 9, 25, 1, 26, 1, 26, 1, 26, 1, 26, 3, 26, 232, 8,
		26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29,
		1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1, 29, 1,
		29, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 5, 31,
		264, 8, 31, 10, 31, 12, 31, 267, 9, 31, 1, 31, 1, 31, 1, 32, 1, 32, 1,
		32, 3, 32, 274, 8, 32, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34,
		1, 34, 1, 35, 3, 35, 285, 8, 35, 1, 35, 1, 35, 1, 35, 4, 35, 290, 8, 35,
		11, 35, 12, 35, 291, 1, 35, 3, 35, 295, 8, 35, 1, 36, 1, 36, 1, 36, 5,
		36, 300, 8, 36, 10, 36, 12, 36, 303, 9, 36, 3, 36, 305, 8, 36, 1, 37, 1,
		37, 3, 37, 309, 8, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 5, 39,
		317, 8, 39, 10, 39, 12, 39, 320, 9, 39, 1, 40, 1, 40, 5, 40, 324, 8, 40,
		10, 40, 12, 40, 327, 9, 40, 0, 0, 41, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 0, 55, 0, 57, 0, 59, 27, 61, 28, 63, 29, 65, 0, 67,
		0, 69, 0, 71, 30, 73, 31, 75, 32, 77, 33, 79, 34, 81, 35, 1, 0, 9, 3, 0,
		45, 45, 58, 58, 95, 95, 2, 0, 65, 90, 97, 122, 2, 0, 34, 34, 92, 92, 8,
		0, 34, 34, 47, 47, 92, 92, 98, 98, 102, 102, 110, 110, 114, 114, 116, 116,
		3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 57, 1, 0, 49, 57, 2, 0, 69, 69,
		101, 101, 2, 0, 43, 43, 45, 45, 355, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0,
		0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0,
		0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0,
		0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0,
		0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1,
		0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43,
		1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0,
		51, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0, 0, 77, 1, 0, 0,
		0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 1, 83, 1, 0, 0, 0, 3, 85, 1, 0,
		0, 0, 5, 87, 1, 0, 0, 0, 7, 90, 1, 0, 0, 0, 9, 92, 1, 0, 0, 0, 11, 94,
		1, 0, 0, 0, 13, 96, 1, 0, 0, 0, 15, 104, 1, 0, 0, 0, 17, 111, 1, 0, 0,
		0, 19, 122, 1, 0, 0, 0, 21, 124, 1, 0, 0, 0, 23, 133, 1, 0, 0, 0, 25, 141,
		1, 0, 0, 0, 27, 149, 1, 0, 0, 0, 29, 156, 1, 0, 0, 0, 31, 163, 1, 0, 0,
		0, 33, 171, 1, 0, 0, 0, 35, 179, 1, 0, 0, 0, 37, 185, 1, 0, 0, 0, 39, 191,
		1, 0, 0, 0, 41, 197, 1, 0, 0, 0, 43, 199, 1, 0, 0, 0, 45, 203, 1, 0, 0,
		0, 47, 207, 1, 0, 0, 0, 49, 216, 1, 0, 0, 0, 51, 220, 1, 0, 0, 0, 53, 231,
		1, 0, 0, 0, 55, 233, 1, 0, 0, 0, 57, 235, 1, 0, 0, 0, 59, 237, 1, 0, 0,
		0, 61, 254, 1, 0, 0, 0, 63, 260, 1, 0, 0, 0, 65, 270, 1, 0, 0, 0, 67, 275,
		1, 0, 0, 0, 69, 281, 1, 0, 0, 0, 71, 284, 1, 0, 0, 0, 73, 304, 1, 0, 0,
		0, 75, 306, 1, 0, 0, 0, 77, 312, 1, 0, 0, 0, 79, 314, 1, 0, 0, 0, 81, 321,
		1, 0, 0, 0, 83, 84, 5, 40, 0, 0, 84, 2, 1, 0, 0, 0, 85, 86, 5, 41, 0, 0,
		86, 4, 1, 0, 0, 0, 87, 88, 5, 112, 0, 0, 88, 89, 5, 114, 0, 0, 89, 6, 1,
		0, 0, 0, 90, 91, 5, 46, 0, 0, 91, 8, 1, 0, 0, 0, 92, 93, 5, 45, 0, 0, 93,
		10, 1, 0, 0, 0, 94, 95, 5, 91, 0, 0, 95, 12, 1, 0, 0, 0, 96, 97, 5, 93,
		0, 0, 97, 14, 1, 0, 0, 0, 98, 99, 5, 110, 0, 0, 99, 100, 5, 111, 0, 0,
		100, 105, 5, 116, 0, 0, 101, 102, 5, 78, 0, 0, 102, 103, 5, 79, 0, 0, 103,
		105, 5, 84, 0, 0, 104, 98, 1, 0, 0, 0, 104, 101, 1, 0, 0, 0, 105, 16, 1,
		0, 0, 0, 106, 107, 5, 97, 0, 0, 107, 108, 5, 110, 0, 0, 108, 112, 5, 100,
		0, 0, 109, 110, 5, 111, 0, 0, 110, 112, 5, 114, 0, 0, 111, 106, 1, 0, 0,
		0, 111, 109, 1, 0, 0, 0, 112, 18, 1, 0, 0, 0, 113, 114, 5, 116, 0, 0, 114,
		115, 5, 114, 0, 0, 115, 116, 5, 117, 0, 0, 116, 123, 5, 101, 0, 0, 117,
		118, 5, 102, 0, 0, 118, 119, 5, 97, 0, 0, 119, 120, 5, 108, 0, 0, 120,
		121, 5, 115, 0, 0, 121, 123, 5, 101, 0, 0, 122, 113, 1, 0, 0, 0, 122, 117,
		1, 0, 0, 0, 123, 20, 1, 0, 0, 0, 124, 125, 5, 110, 0, 0, 125, 126, 5, 117,
		0, 0, 126, 127, 5, 108, 0, 0, 127, 128, 5, 108, 0, 0, 128, 22, 1, 0, 0,
		0, 129, 130, 5, 73, 0, 0, 130, 134, 5, 78, 0, 0, 131, 132, 5, 105, 0, 0,
		132, 134, 5, 110, 0, 0, 133, 129, 1, 0, 0, 0, 133, 131, 1, 0, 0, 0, 134,
		24, 1, 0, 0, 0, 135, 136, 5, 101, 0, 0, 136, 142, 5, 113, 0, 0, 137, 138,
		5, 69, 0, 0, 138, 142, 5, 81, 0, 0, 139, 140, 5, 61, 0, 0, 140, 142, 5,
		61, 0, 0, 141, 135, 1, 0, 0, 0, 141, 137, 1, 0, 0, 0, 141, 139, 1, 0, 0,
		0, 142, 26, 1, 0, 0, 0, 143, 144, 5, 110, 0, 0, 144, 150, 5, 101, 0, 0,
		145, 146, 5, 78, 0, 0, 146, 150, 5, 69, 0, 0, 147, 148, 5, 33, 0, 0, 148,
		150, 5, 61, 0, 0, 149, 143, 1, 0, 0, 0, 149, 145, 1, 0, 0, 0, 149, 147,
		1, 0, 0, 0, 150, 28, 1, 0, 0, 0, 151, 152, 5, 103, 0, 0, 152, 157, 5, 116,
		0, 0, 153, 154, 5, 71, 0, 0, 154, 157, 5, 84, 0, 0, 155, 157, 5, 62, 0,
		0, 156, 151, 1, 0, 0, 0, 156, 153, 1, 0, 0, 0, 156, 155, 1, 0, 0, 0, 157,
		30, 1, 0, 0, 0, 158, 159, 5, 108, 0, 0, 159, 164, 5, 116, 0, 0, 160, 161,
		5, 76, 0, 0, 161, 164, 5, 84, 0, 0, 162, 164, 5, 60, 0, 0, 163, 158, 1,
		0, 0, 0, 163, 160, 1, 0, 0, 0, 163, 162, 1, 0, 0, 0, 164, 32, 1, 0, 0,
		0, 165, 166, 5, 103, 0, 0, 166, 172, 5, 101, 0, 0, 167, 168, 5, 71, 0,
		0, 168, 172, 5, 69, 0, 0, 169, 170, 5, 62, 0, 0, 170, 172, 5, 61, 0, 0,
		171, 165, 1, 0, 0, 0, 171, 167, 1, 0, 0, 0, 171, 169, 1, 0, 0, 0, 172,
		34, 1, 0, 0, 0, 173, 174, 5, 108, 0, 0, 174, 180, 5, 101, 0, 0, 175, 176,
		5, 76, 0, 0, 176, 180, 5, 69, 0, 0, 177, 178, 5, 60, 0, 0, 178, 180, 5,
		61, 0, 0, 179, 173, 1, 0, 0, 0, 179, 175, 1, 0, 0, 0, 179, 177, 1, 0, 0,
		0, 180, 36, 1, 0, 0, 0, 181, 182, 5, 99, 0, 0, 182, 186, 5, 111, 0, 0,
		183, 184, 5, 67, 0, 0, 184, 186, 5, 79, 0, 0, 185, 181, 1, 0, 0, 0, 185,
		183, 1, 0, 0, 0, 186, 38, 1, 0, 0, 0, 187, 188, 5, 115, 0, 0, 188, 192,
		5, 119, 0, 0, 189, 190, 5, 83, 0, 0, 190, 192, 5, 87, 0, 0, 191, 187, 1,
		0, 0, 0, 191, 189, 1, 0, 0, 0, 192, 40, 1, 0, 0, 0, 193, 194, 5, 101, 0,
		0, 194, 198, 5, 119, 0, 0, 195, 196, 5, 69, 0, 0, 196, 198, 5, 87, 0, 0,
		197, 193, 1, 0, 0, 0, 197, 195, 1, 0, 0, 0, 198, 42, 1, 0, 0, 0, 199, 200,
		5, 77, 0, 0, 200, 201, 5, 76, 0, 0, 201, 202, 5, 80, 0, 0, 202, 44, 1,
		0, 0, 0, 203, 204, 5, 83, 0, 0, 204, 205, 5, 85, 0, 0, 205, 206, 5, 77,
		0, 0, 206, 46, 1, 0, 0, 0, 207, 208, 5, 83, 0, 0, 208, 209, 5, 85, 0, 0,
		209, 210, 5, 66, 0, 0, 210, 211, 5, 84, 0, 0, 211, 212, 5, 82, 0, 0, 212,
		213, 5, 65, 0, 0, 213, 214, 5, 67, 0, 0, 214, 215, 5, 84, 0, 0, 215, 48,
		1, 0, 0, 0, 216, 217, 5, 68, 0, 0, 217, 218, 5, 73, 0, 0, 218, 219, 5,
		86, 0, 0, 219, 50, 1, 0, 0, 0, 220, 224, 3, 57, 28, 0, 221, 223, 3, 53,
		26, 0, 222, 221, 1, 0, 0, 0, 223, 226, 1, 0, 0, 0, 224, 222, 1, 0, 0, 0,
		224, 225, 1, 0, 0, 0, 225, 52, 1, 0, 0, 0, 226, 224, 1, 0, 0, 0, 227, 232,
		7, 0, 0, 0, 228, 232, 3, 55, 27, 0, 229, 232, 3, 57, 28, 0, 230, 232, 3,
		79, 39, 0, 231, 227, 1, 0, 0, 0, 231, 228, 1, 0, 0, 0, 231, 229, 1, 0,
		0, 0, 231, 230, 1, 0, 0, 0, 232, 54, 1, 0, 0, 0, 233, 234, 2, 48, 57, 0,
		234, 56, 1, 0, 0, 0, 235, 236, 7, 1, 0, 0, 236, 58, 1, 0, 0, 0, 237, 238,
		3, 55, 27, 0, 238, 239, 3, 55, 27, 0, 239, 240, 3, 55, 27, 0, 240, 241,
		3, 55, 27, 0, 241, 242, 5, 45, 0, 0, 242, 243, 3, 55, 27, 0, 243, 244,
		3, 55, 27, 0, 244, 245, 5, 45, 0, 0, 245, 246, 3, 55, 27, 0, 246, 247,
		3, 55, 27, 0, 247, 248, 5, 84, 0, 0, 248, 249, 3, 55, 27, 0, 249, 250,
		3, 55, 27, 0, 250, 251, 5, 58, 0, 0, 251, 252, 3, 55, 27, 0, 252, 253,
		3, 55, 27, 0, 253, 60, 1, 0, 0, 0, 254, 255, 3, 73, 36, 0, 255, 256, 5,
		46, 0, 0, 256, 257, 3, 73, 36, 0, 257, 258, 5, 46, 0, 0, 258, 259, 3, 73,
		36, 0, 259, 62, 1, 0, 0, 0, 260, 265, 5, 34, 0, 0, 261, 264, 3, 65, 32,
		0, 262, 264, 8, 2, 0, 0, 263, 261, 1, 0, 0, 0, 263, 262, 1, 0, 0, 0, 264,
		267, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 265, 266, 1, 0, 0, 0, 266, 268,
		1, 0, 0, 0, 267, 265, 1, 0, 0, 0, 268, 269, 5, 34, 0, 0, 269, 64, 1, 0,
		0, 0, 270, 273, 5, 92, 0, 0, 271, 274, 7, 3, 0, 0, 272, 274, 3, 67, 33,
		0, 273, 271, 1, 0, 0, 0, 273, 272, 1, 0, 0, 0, 274, 66, 1, 0, 0, 0, 275,
		276, 5, 117, 0, 0, 276, 277, 3, 69, 34, 0, 277, 278, 3, 69, 34, 0, 278,
		279, 3, 69, 34, 0, 279, 280, 3, 69, 34, 0, 280, 68, 1, 0, 0, 0, 281, 282,
		7, 4, 0, 0, 282, 70, 1, 0, 0, 0, 283, 285, 5, 45, 0, 0, 284, 283, 1, 0,
		0, 0, 284, 285, 1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 286, 287, 3, 73, 36,
		0, 287, 289, 5, 46, 0, 0, 288, 290, 7, 5, 0, 0, 289, 288, 1, 0, 0, 0, 290,
		291, 1, 0, 0, 0, 291, 289, 1, 0, 0, 0, 291, 292, 1, 0, 0, 0, 292, 294,
		1, 0, 0, 0, 293, 295, 3, 75, 37, 0, 294, 293, 1, 0, 0, 0, 294, 295, 1,
		0, 0, 0, 295, 72, 1, 0, 0, 0, 296, 305, 5, 48, 0, 0, 297, 301, 7, 6, 0,
		0, 298, 300, 7, 5, 0, 0, 299, 298, 1, 0, 0, 0, 300, 303, 1, 0, 0, 0, 301,
		299, 1, 0, 0, 0, 301, 302, 1, 0, 0, 0, 302, 305, 1, 0, 0, 0, 303, 301,
		1, 0, 0, 0, 304, 296, 1, 0, 0, 0, 304, 297, 1, 0, 0, 0, 305, 74, 1, 0,
		0, 0, 306, 308, 7, 7, 0, 0, 307, 309, 7, 8, 0, 0, 308, 307, 1, 0, 0, 0,
		308, 309, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 311, 3, 73, 36, 0, 311,
		76, 1, 0, 0, 0, 312, 313, 5, 10, 0, 0, 313, 78, 1, 0, 0, 0, 314, 318, 5,
		44, 0, 0, 315, 317, 5, 32, 0, 0, 316, 315, 1, 0, 0, 0, 317, 320, 1, 0,
		0, 0, 318, 316, 1, 0, 0, 0, 318, 319, 1, 0, 0, 0, 319, 80, 1, 0, 0, 0,
		320, 318, 1, 0, 0, 0, 321, 325, 5, 32, 0, 0, 322, 324, 3, 77, 38, 0, 323,
		322, 1, 0, 0, 0, 324, 327, 1, 0, 0, 0, 325, 323, 1, 0, 0, 0, 325, 326,
		1, 0, 0, 0, 326, 82, 1, 0, 0, 0, 327, 325, 1, 0, 0, 0, 27, 0, 104, 111,
		122, 133, 141, 149, 156, 163, 171, 179, 185, 191, 197, 224, 231, 263, 265,
		273, 284, 291, 294, 301, 304, 308, 318, 325, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// JsonQueryLexerInit initializes any static state used to implement JsonQueryLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewJsonQueryLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func JsonQueryLexerInit() {
	staticData := &JsonQueryLexerLexerStaticData
	staticData.once.Do(jsonquerylexerLexerInit)
}

// NewJsonQueryLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewJsonQueryLexer(input antlr.CharStream) *JsonQueryLexer {
	JsonQueryLexerInit()
	l := new(JsonQueryLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &JsonQueryLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "JsonQuery.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// JsonQueryLexer tokens.
const (
	JsonQueryLexerT__0             = 1
	JsonQueryLexerT__1             = 2
	JsonQueryLexerT__2             = 3
	JsonQueryLexerT__3             = 4
	JsonQueryLexerT__4             = 5
	JsonQueryLexerT__5             = 6
	JsonQueryLexerT__6             = 7
	JsonQueryLexerNOT              = 8
	JsonQueryLexerLOGICAL_OPERATOR = 9
	JsonQueryLexerBOOLEAN          = 10
	JsonQueryLexerNULL             = 11
	JsonQueryLexerIN               = 12
	JsonQueryLexerEQ               = 13
	JsonQueryLexerNE               = 14
	JsonQueryLexerGT               = 15
	JsonQueryLexerLT               = 16
	JsonQueryLexerGE               = 17
	JsonQueryLexerLE               = 18
	JsonQueryLexerCO               = 19
	JsonQueryLexerSW               = 20
	JsonQueryLexerEW               = 21
	JsonQueryLexerASTERISK         = 22
	JsonQueryLexerPLUS             = 23
	JsonQueryLexerMINUS            = 24
	JsonQueryLexerDIVISON          = 25
	JsonQueryLexerATTRNAME         = 26
	JsonQueryLexerDATETIME         = 27
	JsonQueryLexerVERSION          = 28
	JsonQueryLexerSTRING           = 29
	JsonQueryLexerDOUBLE           = 30
	JsonQueryLexerINT              = 31
	JsonQueryLexerEXP              = 32
	JsonQueryLexerNEWLINE          = 33
	JsonQueryLexerCOMMA            = 34
	JsonQueryLexerSP               = 35
)
